{"version":3,"file":"server.98e699dc9013df838fc5.hot-update.js","sources":["webpack://bills_api/./src/application.module.ts","webpack://bills_api/webpack/runtime/getFullHash"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ApplicationModule = void 0;\nconst nestjs_1 = require(\"@mikro-orm/nestjs\");\nconst common_1 = require(\"@nestjs/common\");\nconst config_1 = require(\"@nestjs/config\");\nconst graphql_1 = require(\"@nestjs/graphql\");\nconst nestjs_pino_1 = require(\"nestjs-pino\");\nconst entities = __importStar(require(\"@/models\"));\nconst modules_1 = require(\"@/modules\");\nconst env_schema_1 = require(\"@/utils/env.schema\");\nlet ApplicationModule = class ApplicationModule {\n};\nApplicationModule = __decorate([\n    (0, common_1.Module)({\n        imports: [\n            nestjs_pino_1.LoggerModule.forRoot({\n                pinoHttp: {\n                    base: { name: \"Billz\" },\n                    messageKey: \"message\",\n                    autoLogging: process.env.NODE_ENV === \"production\",\n                    level: process.env.NODE_ENV !== \"production\" ? \"debug\" : \"info\",\n                    prettyPrint: process.env.NODE_ENV !== \"production\"\n                        ? {\n                            translateTime: \"dd/mm/yyyy, hh:MM:ss:l\",\n                            ignore: \"context,pid,req\",\n                            levelFirst: true,\n                        }\n                        : undefined,\n                },\n            }),\n            config_1.ConfigModule.forRoot({\n                isGlobal: true,\n                validationSchema: env_schema_1.envSchema,\n            }),\n            graphql_1.GraphQLModule.forRootAsync({\n                inject: [config_1.ConfigService],\n                useFactory: async (configService) => ({\n                    autoSchemaFile: configService.get(\"GRAPHQL_FILE\"),\n                    sortSchema: true,\n                    cors: true,\n                    context: (req, res) => {\n                        console.log(req);\n                        return { req, res };\n                    },\n                }),\n            }),\n            nestjs_1.MikroOrmModule.forRootAsync({\n                inject: [config_1.ConfigService],\n                useFactory: async (configService) => ({\n                    type: configService.get(\"DATABASE_TYPE\"),\n                    dbName: configService.get(\"DATABASE_NAME\"),\n                    host: configService.get(\"DATABASE_HOST\"),\n                    port: configService.get(\"DATABASE_PORT\"),\n                    user: configService.get(\"DATABASE_USER\"),\n                    password: configService.get(\"DATABASE_PASS\"),\n                    entities: Object.values(entities),\n                }),\n            }),\n            modules_1.AuthenticationModule,\n            modules_1.UserModule,\n        ],\n    })\n], ApplicationModule);\nexports.ApplicationModule = ApplicationModule;\n","__webpack_require__.h = () => (\"d6a14bc04f01d3408d1e\")"],"mappings":";;;;;;;;;;;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AANA;AADA;AAgBA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAPA;AAFA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAFA;AAjCA;AAkDA;;A;;;;;;;;;AChEA;;;;A","sourceRoot":""}