{"version":3,"file":"server.e57f79291879ef1b5981.hot-update.js","sources":["webpack://bills_api/./src/application.module.ts","webpack://bills_api/./src/modules/bill/bill.module.ts","webpack://bills_api/./src/modules/bill/bill.resolver.ts","webpack://bills_api/./src/modules/bill/bill.service.ts","webpack://bills_api/./src/modules/bill/index.ts","webpack://bills_api/webpack/runtime/getFullHash"],"sourcesContent":["import { MikroOrmModule } from \"@mikro-orm/nestjs\";\nimport { Module } from \"@nestjs/common\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { GraphQLModule } from \"@nestjs/graphql\";\nimport { PinoLogger, LoggerModule } from \"nestjs-pino\";\nimport { AuthenticationModule, UserModule } from \"@/modules\";\nimport { envSchema } from \"@/utils/env.schema\";\nimport { getConfiguration } from \"./mikro-orm.config\";\nimport { BillModule } from \"./modules/bill\";\nlet ApplicationModule = class ApplicationModule {\n};\nApplicationModule = __decorate([\n    Module({\n        imports: [\n            LoggerModule.forRoot({\n                pinoHttp: {\n                    base: { name: \"Billz\" },\n                    messageKey: \"message\",\n                    autoLogging: process.env.NODE_ENV === \"production\",\n                    level: process.env.NODE_ENV !== \"production\" ? \"debug\" : \"info\",\n                    prettyPrint: process.env.NODE_ENV !== \"production\"\n                        ? {\n                            translateTime: \"dd/mm/yyyy, hh:MM:ss:l\",\n                            ignore: \"context,pid,req\",\n                            levelFirst: true,\n                        }\n                        : undefined,\n                },\n            }),\n            ConfigModule.forRoot({\n                isGlobal: true,\n                validationSchema: envSchema,\n            }),\n            GraphQLModule.forRootAsync({\n                inject: [ConfigService],\n                useFactory: async (configService) => ({\n                    autoSchemaFile: configService.get(\"GRAPHQL_FILE\"),\n                    sortSchema: true,\n                    cors: true,\n                    context: ({ req, res }) => ({ req, res }),\n                }),\n            }),\n            MikroOrmModule.forRootAsync({\n                inject: [ConfigService, PinoLogger],\n                useFactory: async (configService, logger) => ({\n                    ...getConfiguration(configService),\n                    debug: process.env.NODE_ENV === \"development\" ? [\"query\", \"query-params\"] : false,\n                    logger: (message) => logger.debug(message),\n                }),\n            }),\n            AuthenticationModule,\n            UserModule,\n            BillModule,\n        ],\n    })\n], ApplicationModule);\nexport { ApplicationModule };\n","import { Module } from \"@nestjs/common\";\nimport { BillResolver } from \"./bill.resolver\";\nlet BillModule = class BillModule {\n};\nBillModule = __decorate([\n    Module({\n        providers: [BillResolver],\n    })\n], BillModule);\nexport { BillModule };\n","import { Args, Mutation, Resolver } from \"@nestjs/graphql\";\nimport { Bill } from \"@/models\";\nlet BillResolver = class BillResolver {\n    async saveBill(input) { }\n};\n__decorate([\n    Mutation(() => Bill),\n    __param(0, Args(\"input\")),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", Promise)\n], BillResolver.prototype, \"saveBill\", null);\nBillResolver = __decorate([\n    Resolver(() => Bill)\n], BillResolver);\nexport { BillResolver };\n","import { InjectRepository } from \"@mikro-orm/nestjs\";\nimport { Injectable } from \"@nestjs/common\";\nimport { Bill } from \"@/models\";\nlet BillService = class BillService {\n    billRepository;\n    constructor(billRepository) {\n        this.billRepository = billRepository;\n    }\n};\nBillService = __decorate([\n    Injectable(),\n    __param(0, InjectRepository(Bill)),\n    __metadata(\"design:paramtypes\", [Object])\n], BillService);\nexport { BillService };\n","export * from \"./bill.module\";\nexport * from \"./bill.service\";\nexport * from \"./bill.resolver\";\n","__webpack_require__.h = () => (\"a340168da15352f7c872\")"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AANA;AADA;AAgBA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAFA;AAUA;AACA;AAEA;AACA;AAHA;AAFA;AA9BA;;;A;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AAEA;AAEA;AADA;;;A;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AAFA;AACA;AAEA;AACA;AAMA;;;A;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AALA;AAMA;;;A;;;;;;;;;;;;;;;;;;ACTA;AACA;;;A;;;;;;;;;ACDA;;;;A","sourceRoot":""}