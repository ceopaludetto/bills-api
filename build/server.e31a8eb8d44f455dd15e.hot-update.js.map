{"version":3,"file":"server.e31a8eb8d44f455dd15e.hot-update.js","sources":["webpack://bills_api/./src/modules/authentication/authentication.guard.ts","webpack://bills_api/webpack/runtime/getFullHash"],"sourcesContent":["\"use strict\";\nvar _a, _b, _c;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GqlAuthenticationGuard = void 0;\nconst common_1 = require(\"@nestjs/common\");\nconst config_1 = require(\"@nestjs/config\");\nconst graphql_1 = require(\"@nestjs/graphql\");\nconst jwt_1 = require(\"@nestjs/jwt\");\nconst passport_1 = require(\"@nestjs/passport\");\nconst authentication_service_1 = require(\"./authentication.service\");\nconst extract_1 = require(\"./strategies/extract\");\nlet GqlAuthenticationGuard = class GqlAuthenticationGuard extends (0, passport_1.AuthGuard)(\"jwt\") {\n    jwtService;\n    configService;\n    authenticationService;\n    constructor(jwtService, configService, authenticationService) {\n        super();\n        this.jwtService = jwtService;\n        this.configService = configService;\n        this.authenticationService = authenticationService;\n    }\n    getRequest(context) {\n        const { req } = graphql_1.GqlExecutionContext.create(context).getContext();\n        return req;\n    }\n    async canActivate(context) {\n        const ctx = graphql_1.GqlExecutionContext.create(context);\n        const { req, res } = ctx.getContext();\n        const token = extract_1.Extract.accessToken(req);\n        if (!token)\n            return super.canActivate(context);\n        let userID;\n        try {\n            const payload = this.jwtService.decode(token);\n            userID = payload.id;\n            await this.jwtService.verifyAsync(token);\n        }\n        catch (verifyError) {\n            if (verifyError instanceof Error) {\n                if (verifyError.name === \"TokenExpiredError\") {\n                    const refreshToken = extract_1.Extract.refreshToken(req);\n                    console.log(refreshToken);\n                    if (!refreshToken)\n                        return super.canActivate(context);\n                    if (!userID)\n                        return super.canActivate(context);\n                    const user = await this.authenticationService.findUserByTokenID(userID);\n                    if (!user)\n                        return super.canActivate(context);\n                    try {\n                        await this.jwtService.verifyAsync(refreshToken, {\n                            secret: this.configService.get(\"AUTH_SECRET\") + user?.password,\n                        });\n                        const [newAccessToken, newRefreshToken] = await this.authenticationService.genTokens(user);\n                        this.authenticationService.setTokensInResponse(res, [newAccessToken, newRefreshToken]);\n                        req.headers.accesstoken = newAccessToken;\n                        req.headers.refreshtoken = newRefreshToken;\n                        return super.canActivate(context);\n                    }\n                    catch (error) {\n                        return super.canActivate(context);\n                    }\n                }\n                return super.canActivate(context);\n            }\n            return super.canActivate(context);\n        }\n        return super.canActivate(context);\n    }\n};\nGqlAuthenticationGuard = __decorate([\n    (0, common_1.Injectable)(),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof jwt_1.JwtService !== \"undefined\" && jwt_1.JwtService) === \"function\" ? _a : Object, typeof (_b = typeof config_1.ConfigService !== \"undefined\" && config_1.ConfigService) === \"function\" ? _b : Object, typeof (_c = typeof authentication_service_1.AuthenticationService !== \"undefined\" && authentication_service_1.AuthenticationService) === \"function\" ? _c : Object])\n], GqlAuthenticationGuard);\nexports.GqlAuthenticationGuard = GqlAuthenticationGuard;\n","__webpack_require__.h = () => (\"d8ae56bd845937c2c15b\")"],"mappings":";;;;;;;;;;;AAAA;AACA;;;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AAFA;AACA;AADA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AA1DA;AA2DA;AAIA;;A;;;;;;;;;AC1EA;;;;A","sourceRoot":""}