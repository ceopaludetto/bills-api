{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AuthenticationModule = void 0;\n\nconst common_1 = require(\"@nestjs/common\");\n\nconst config_1 = require(\"@nestjs/config\");\n\nconst jwt_1 = require(\"@nestjs/jwt\");\n\nconst passport_1 = require(\"@nestjs/passport\");\n\nrequire(\"@/modules/user\");\n\nconst authentication_resolver_1 = require(\"./authentication.resolver\");\n\nconst authentication_service_1 = require(\"./authentication.service\");\n\nconst jwt_strategy_1 = require(\"./strategies/jwt.strategy\");\n\nlet AuthenticationModule = class AuthenticationModule {};\nAuthenticationModule = __decorate([(0, common_1.Global)(), (0, common_1.Module)({\n  imports: [// UserModule,\n  passport_1.PassportModule, jwt_1.JwtModule.registerAsync({\n    inject: [config_1.ConfigService],\n    useFactory: configService => ({\n      secret: configService.get(\"AUTH_SECRET\"),\n      signOptions: {\n        expiresIn: \"1h\"\n      }\n    })\n  })],\n  providers: [authentication_resolver_1.AuthenticationResolver, authentication_service_1.AuthenticationService, jwt_strategy_1.JwtStrategy],\n  exports: [authentication_service_1.AuthenticationService]\n})], AuthenticationModule);\nexports.AuthenticationModule = AuthenticationModule;","map":{"version":3,"sources":["/Users/carlos/Documents/Projetos/Javascript/bills_api/src/modules/authentication/authentication.module.ts"],"names":["Object","defineProperty","exports","value","AuthenticationModule","common_1","require","config_1","jwt_1","passport_1","authentication_resolver_1","authentication_service_1","jwt_strategy_1","__decorate","Global","Module","imports","PassportModule","JwtModule","registerAsync","inject","ConfigService","useFactory","configService","secret","get","signOptions","expiresIn","providers","AuthenticationResolver","AuthenticationService","JwtStrategy"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,oBAAR,GAA+B,KAAK,CAApC;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,gBAAD,CAAxB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,gBAAD,CAAxB;;AACA,MAAME,KAAK,GAAGF,OAAO,CAAC,aAAD,CAArB;;AACA,MAAMG,UAAU,GAAGH,OAAO,CAAC,kBAAD,CAA1B;;AACAA,OAAO,CAAC,gBAAD,CAAP;;AACA,MAAMI,yBAAyB,GAAGJ,OAAO,CAAC,2BAAD,CAAzC;;AACA,MAAMK,wBAAwB,GAAGL,OAAO,CAAC,0BAAD,CAAxC;;AACA,MAAMM,cAAc,GAAGN,OAAO,CAAC,2BAAD,CAA9B;;AACA,IAAIF,oBAAoB,GAAG,MAAMA,oBAAN,CAA2B,EAAtD;AAEAA,oBAAoB,GAAGS,UAAU,CAAC,CAC9B,CAAC,GAAGR,QAAQ,CAACS,MAAb,GAD8B,EAE9B,CAAC,GAAGT,QAAQ,CAACU,MAAb,EAAqB;AACjBC,EAAAA,OAAO,EAAE,CACL;AACAP,EAAAA,UAAU,CAACQ,cAFN,EAGLT,KAAK,CAACU,SAAN,CAAgBC,aAAhB,CAA8B;AAC1BC,IAAAA,MAAM,EAAE,CAACb,QAAQ,CAACc,aAAV,CADkB;AAE1BC,IAAAA,UAAU,EAAGC,aAAD,KAAoB;AAC5BC,MAAAA,MAAM,EAAED,aAAa,CAACE,GAAd,CAAkB,aAAlB,CADoB;AAE5BC,MAAAA,WAAW,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb;AAFe,KAApB;AAFc,GAA9B,CAHK,CADQ;AAYjBC,EAAAA,SAAS,EAAE,CAAClB,yBAAyB,CAACmB,sBAA3B,EAAmDlB,wBAAwB,CAACmB,qBAA5E,EAAmGlB,cAAc,CAACmB,WAAlH,CAZM;AAajB7B,EAAAA,OAAO,EAAE,CAACS,wBAAwB,CAACmB,qBAA1B;AAbQ,CAArB,CAF8B,CAAD,EAiB9B1B,oBAjB8B,CAAjC;AAkBAF,OAAO,CAACE,oBAAR,GAA+BA,oBAA/B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuthenticationModule = void 0;\nconst common_1 = require(\"@nestjs/common\");\nconst config_1 = require(\"@nestjs/config\");\nconst jwt_1 = require(\"@nestjs/jwt\");\nconst passport_1 = require(\"@nestjs/passport\");\nrequire(\"@/modules/user\");\nconst authentication_resolver_1 = require(\"./authentication.resolver\");\nconst authentication_service_1 = require(\"./authentication.service\");\nconst jwt_strategy_1 = require(\"./strategies/jwt.strategy\");\nlet AuthenticationModule = class AuthenticationModule {\n};\nAuthenticationModule = __decorate([\n    (0, common_1.Global)(),\n    (0, common_1.Module)({\n        imports: [\n            // UserModule,\n            passport_1.PassportModule,\n            jwt_1.JwtModule.registerAsync({\n                inject: [config_1.ConfigService],\n                useFactory: (configService) => ({\n                    secret: configService.get(\"AUTH_SECRET\"),\n                    signOptions: { expiresIn: \"1h\" },\n                }),\n            }),\n        ],\n        providers: [authentication_resolver_1.AuthenticationResolver, authentication_service_1.AuthenticationService, jwt_strategy_1.JwtStrategy],\n        exports: [authentication_service_1.AuthenticationService],\n    })\n], AuthenticationModule);\nexports.AuthenticationModule = AuthenticationModule;\n"]},"metadata":{},"sourceType":"script"}