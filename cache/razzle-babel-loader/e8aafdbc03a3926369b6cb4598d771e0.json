{"ast":null,"code":"\"use strict\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ApplicationModule = void 0;\n\nconst nestjs_1 = require(\"@mikro-orm/nestjs\");\n\nconst common_1 = require(\"@nestjs/common\");\n\nconst config_1 = require(\"@nestjs/config\");\n\nconst graphql_1 = require(\"@nestjs/graphql\");\n\nconst nestjs_pino_1 = require(\"nestjs-pino\");\n\nconst modules_1 = require(\"@/modules\");\n\nconst env_schema_1 = require(\"@/utils/env.schema\");\n\nconst mikro_orm_config_1 = require(\"./mikro-orm.config\");\n\nconst bill_1 = require(\"./modules/bill\");\n\nrequire(\"@/utils/register.enums\");\n\nlet ApplicationModule = class ApplicationModule {};\nApplicationModule = __decorate([(0, common_1.Module)({\n  imports: [nestjs_pino_1.LoggerModule.forRoot({\n    pinoHttp: {\n      base: {\n        name: \"Billz\"\n      },\n      messageKey: \"message\",\n      autoLogging: false,\n      level: true ? \"debug\" : \"info\",\n      prettyPrint: true ? {\n        translateTime: \"dd/mm/yyyy, hh:MM:ss:l\",\n        ignore: \"context,pid,req\",\n        levelFirst: true\n      } : undefined\n    }\n  }), config_1.ConfigModule.forRoot({\n    isGlobal: true,\n    validationSchema: env_schema_1.envSchema\n  }), graphql_1.GraphQLModule.forRootAsync({\n    inject: [config_1.ConfigService],\n    useFactory: async configService => ({\n      autoSchemaFile: configService.get(\"GRAPHQL_FILE\"),\n      sortSchema: true,\n      cors: true,\n      context: ({\n        req,\n        res\n      }) => ({\n        req,\n        res\n      })\n    })\n  }), nestjs_1.MikroOrmModule.forRootAsync({\n    inject: [config_1.ConfigService, nestjs_pino_1.PinoLogger],\n    useFactory: async (configService, logger) => _objectSpread(_objectSpread({}, (0, mikro_orm_config_1.getConfiguration)(configService)), {}, {\n      debug: true ? [\"query\", \"query-params\"] : false,\n      logger: message => logger.debug(message)\n    })\n  }), modules_1.AuthenticationModule, modules_1.UserModule, bill_1.BillModule]\n})], ApplicationModule);\nexports.ApplicationModule = ApplicationModule;","map":{"version":3,"sources":["/Users/carlos/Documents/Projetos/Javascript/bills_api/src/application.module.ts"],"names":["Object","defineProperty","exports","value","ApplicationModule","nestjs_1","require","common_1","config_1","graphql_1","nestjs_pino_1","modules_1","env_schema_1","mikro_orm_config_1","bill_1","__decorate","Module","imports","LoggerModule","forRoot","pinoHttp","base","name","messageKey","autoLogging","level","prettyPrint","translateTime","ignore","levelFirst","undefined","ConfigModule","isGlobal","validationSchema","envSchema","GraphQLModule","forRootAsync","inject","ConfigService","useFactory","configService","autoSchemaFile","get","sortSchema","cors","context","req","res","MikroOrmModule","PinoLogger","logger","getConfiguration","debug","message","AuthenticationModule","UserModule","BillModule"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ApplicationModule = void 0;\nconst nestjs_1 = require(\"@mikro-orm/nestjs\");\nconst common_1 = require(\"@nestjs/common\");\nconst config_1 = require(\"@nestjs/config\");\nconst graphql_1 = require(\"@nestjs/graphql\");\nconst nestjs_pino_1 = require(\"nestjs-pino\");\nconst modules_1 = require(\"@/modules\");\nconst env_schema_1 = require(\"@/utils/env.schema\");\nconst mikro_orm_config_1 = require(\"./mikro-orm.config\");\nconst bill_1 = require(\"./modules/bill\");\nrequire(\"@/utils/register.enums\");\nlet ApplicationModule = class ApplicationModule {\n};\nApplicationModule = __decorate([\n    (0, common_1.Module)({\n        imports: [\n            nestjs_pino_1.LoggerModule.forRoot({\n                pinoHttp: {\n                    base: { name: \"Billz\" },\n                    messageKey: \"message\",\n                    autoLogging: process.env.NODE_ENV === \"production\",\n                    level: process.env.NODE_ENV !== \"production\" ? \"debug\" : \"info\",\n                    prettyPrint: process.env.NODE_ENV !== \"production\"\n                        ? {\n                            translateTime: \"dd/mm/yyyy, hh:MM:ss:l\",\n                            ignore: \"context,pid,req\",\n                            levelFirst: true,\n                        }\n                        : undefined,\n                },\n            }),\n            config_1.ConfigModule.forRoot({\n                isGlobal: true,\n                validationSchema: env_schema_1.envSchema,\n            }),\n            graphql_1.GraphQLModule.forRootAsync({\n                inject: [config_1.ConfigService],\n                useFactory: async (configService) => ({\n                    autoSchemaFile: configService.get(\"GRAPHQL_FILE\"),\n                    sortSchema: true,\n                    cors: true,\n                    context: ({ req, res }) => ({ req, res }),\n                }),\n            }),\n            nestjs_1.MikroOrmModule.forRootAsync({\n                inject: [config_1.ConfigService, nestjs_pino_1.PinoLogger],\n                useFactory: async (configService, logger) => ({\n                    ...(0, mikro_orm_config_1.getConfiguration)(configService),\n                    debug: process.env.NODE_ENV === \"development\" ? [\"query\", \"query-params\"] : false,\n                    logger: (message) => logger.debug(message),\n                }),\n            }),\n            modules_1.AuthenticationModule,\n            modules_1.UserModule,\n            bill_1.BillModule,\n        ],\n    })\n], ApplicationModule);\nexports.ApplicationModule = ApplicationModule;\n"]},"metadata":{},"sourceType":"script"}