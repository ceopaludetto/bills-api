{"ast":null,"code":"\"use strict\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Paginate = exports.PaginationArgs = exports.Pagination = void 0;\n\nconst graphql_1 = require(\"@nestjs/graphql\");\n\nconst class_validator_1 = require(\"class-validator\");\n\nfunction Pagination(modelFunc) {\n  const Model = modelFunc();\n  return (target, key, descriptor) => {\n    let PaginationType = class PaginationType {\n      constructor() {\n        _defineProperty(this, \"total\", void 0);\n\n        _defineProperty(this, \"items\", void 0);\n      }\n\n    };\n\n    __decorate([(0, graphql_1.Field)(() => graphql_1.Int), __metadata(\"design:type\", Number)], PaginationType.prototype, \"total\", void 0);\n\n    __decorate([(0, graphql_1.Field)(() => [Model]), __metadata(\"design:type\", Array)], PaginationType.prototype, \"items\", void 0);\n\n    PaginationType = __decorate([(0, graphql_1.ObjectType)(`${Model.name}Pagination`)], PaginationType);\n    return (0, graphql_1.Query)(() => PaginationType)(target, key, descriptor);\n  };\n}\n\nexports.Pagination = Pagination;\nlet PaginationArgs = class PaginationArgs {\n  constructor() {\n    _defineProperty(this, \"offset\", void 0);\n\n    _defineProperty(this, \"limit\", void 0);\n  }\n\n};\n\n__decorate([(0, graphql_1.Field)(() => graphql_1.Int), (0, class_validator_1.IsInt)(), (0, class_validator_1.IsNumber)(), __metadata(\"design:type\", Number)], PaginationArgs.prototype, \"offset\", void 0);\n\n__decorate([(0, graphql_1.Field)(() => graphql_1.Int), (0, class_validator_1.IsInt)(), (0, class_validator_1.IsNumber)(), (0, class_validator_1.IsPositive)(), __metadata(\"design:type\", Number)], PaginationArgs.prototype, \"limit\", void 0);\n\nPaginationArgs = __decorate([(0, graphql_1.ArgsType)()], PaginationArgs);\nexports.PaginationArgs = PaginationArgs;\n\nfunction Paginate(items, count, {\n  limit,\n  offset\n}) {\n  return {\n    total: count,\n    page: Math.floor(offset / limit),\n    pages: Math.ceil(count / limit),\n    items\n  };\n}\n\nexports.Paginate = Paginate;","map":{"version":3,"sources":["/Users/carlos/Documents/Projetos/Javascript/bills_api/src/utils/plugins/pagination.ts"],"names":["Object","defineProperty","exports","value","Paginate","PaginationArgs","Pagination","graphql_1","require","class_validator_1","modelFunc","Model","target","key","descriptor","PaginationType","__decorate","Field","Int","__metadata","Number","prototype","Array","ObjectType","name","Query","IsInt","IsNumber","IsPositive","ArgsType","items","count","limit","offset","total","page","Math","floor","pages","ceil"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Paginate = exports.PaginationArgs = exports.Pagination = void 0;\nconst graphql_1 = require(\"@nestjs/graphql\");\nconst class_validator_1 = require(\"class-validator\");\nfunction Pagination(modelFunc) {\n    const Model = modelFunc();\n    return (target, key, descriptor) => {\n        let PaginationType = class PaginationType {\n            total;\n            items;\n        };\n        __decorate([\n            (0, graphql_1.Field)(() => graphql_1.Int),\n            __metadata(\"design:type\", Number)\n        ], PaginationType.prototype, \"total\", void 0);\n        __decorate([\n            (0, graphql_1.Field)(() => [Model]),\n            __metadata(\"design:type\", Array)\n        ], PaginationType.prototype, \"items\", void 0);\n        PaginationType = __decorate([\n            (0, graphql_1.ObjectType)(`${Model.name}Pagination`)\n        ], PaginationType);\n        return (0, graphql_1.Query)(() => PaginationType)(target, key, descriptor);\n    };\n}\nexports.Pagination = Pagination;\nlet PaginationArgs = class PaginationArgs {\n    offset;\n    limit;\n};\n__decorate([\n    (0, graphql_1.Field)(() => graphql_1.Int),\n    (0, class_validator_1.IsInt)(),\n    (0, class_validator_1.IsNumber)(),\n    __metadata(\"design:type\", Number)\n], PaginationArgs.prototype, \"offset\", void 0);\n__decorate([\n    (0, graphql_1.Field)(() => graphql_1.Int),\n    (0, class_validator_1.IsInt)(),\n    (0, class_validator_1.IsNumber)(),\n    (0, class_validator_1.IsPositive)(),\n    __metadata(\"design:type\", Number)\n], PaginationArgs.prototype, \"limit\", void 0);\nPaginationArgs = __decorate([\n    (0, graphql_1.ArgsType)()\n], PaginationArgs);\nexports.PaginationArgs = PaginationArgs;\nfunction Paginate(items, count, { limit, offset }) {\n    return { total: count, page: Math.floor(offset / limit), pages: Math.ceil(count / limit), items };\n}\nexports.Paginate = Paginate;\n"]},"metadata":{},"sourceType":"script"}