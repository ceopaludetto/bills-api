{"ast":null,"code":"\"use strict\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AuthenticationService = void 0;\n\nconst common_1 = require(\"@nestjs/common\");\n\nconst user_1 = require(\"@/modules/user\");\n\nlet AuthenticationService = class AuthenticationService {\n  constructor(userService, jwtService) {\n    _defineProperty(this, \"userService\", void 0);\n\n    _defineProperty(this, \"jwtService\", void 0);\n\n    this.userService = userService;\n    this.jwtService = jwtService;\n  }\n\n  async validatePayload(payload) {\n    const user = await this.userService.findByID(payload.id);\n    if (!user) throw new common_1.NotFoundException(\"user-not-found\");\n    if (user.email !== payload.email) throw new common_1.UnprocessableEntityException(\"email-mismatch\");\n    return user;\n  }\n\n  async register(data) {\n    const user = await this.userService.create(data);\n    const token = await this.jwtService.signAsync({\n      id: user.id,\n      email: user.emai\n    });\n    return user;\n  }\n\n};\nAuthenticationService = __decorate([(0, common_1.Injectable)(), __metadata(\"design:paramtypes\", [typeof (_a = typeof user_1.UserService !== \"undefined\" && user_1.UserService) === \"function\" ? _a : Object, Object])], AuthenticationService);\nexports.AuthenticationService = AuthenticationService;","map":{"version":3,"sources":["/Users/carlos/Documents/Projetos/Javascript/bills_api/src/modules/authentication/authentication.service.ts"],"names":["_a","Object","defineProperty","exports","value","AuthenticationService","common_1","require","user_1","constructor","userService","jwtService","validatePayload","payload","user","findByID","id","NotFoundException","email","UnprocessableEntityException","register","data","create","token","signAsync","emai","__decorate","Injectable","__metadata","UserService"],"mappings":"AAAA;;;;AACA,IAAIA,EAAJ;;AACAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,qBAAR,GAAgC,KAAK,CAArC;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,gBAAD,CAAxB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,gBAAD,CAAtB;;AACA,IAAIF,qBAAqB,GAAG,MAAMA,qBAAN,CAA4B;AAGpDI,EAAAA,WAAW,CAACC,WAAD,EAAcC,UAAd,EAA0B;AAAA;;AAAA;;AACjC,SAAKD,WAAL,GAAmBA,WAAnB;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACH;;AACoB,QAAfC,eAAe,CAACC,OAAD,EAAU;AAC3B,UAAMC,IAAI,GAAG,MAAM,KAAKJ,WAAL,CAAiBK,QAAjB,CAA0BF,OAAO,CAACG,EAAlC,CAAnB;AACA,QAAI,CAACF,IAAL,EACI,MAAM,IAAIR,QAAQ,CAACW,iBAAb,CAA+B,gBAA/B,CAAN;AACJ,QAAIH,IAAI,CAACI,KAAL,KAAeL,OAAO,CAACK,KAA3B,EACI,MAAM,IAAIZ,QAAQ,CAACa,4BAAb,CAA0C,gBAA1C,CAAN;AACJ,WAAOL,IAAP;AACH;;AACa,QAARM,QAAQ,CAACC,IAAD,EAAO;AACjB,UAAMP,IAAI,GAAG,MAAM,KAAKJ,WAAL,CAAiBY,MAAjB,CAAwBD,IAAxB,CAAnB;AACA,UAAME,KAAK,GAAG,MAAM,KAAKZ,UAAL,CAAgBa,SAAhB,CAA0B;AAAER,MAAAA,EAAE,EAAEF,IAAI,CAACE,EAAX;AAAeE,MAAAA,KAAK,EAAEJ,IAAI,CAACW;AAA3B,KAA1B,CAApB;AACA,WAAOX,IAAP;AACH;;AAnBmD,CAAxD;AAqBAT,qBAAqB,GAAGqB,UAAU,CAAC,CAC/B,CAAC,GAAGpB,QAAQ,CAACqB,UAAb,GAD+B,EAE/BC,UAAU,CAAC,mBAAD,EAAsB,CAAC,QAAQ5B,EAAE,GAAG,OAAOQ,MAAM,CAACqB,WAAd,KAA8B,WAA9B,IAA6CrB,MAAM,CAACqB,WAAjE,MAAkF,UAAlF,GAA+F7B,EAA/F,GAAoGC,MAArG,EAA6GA,MAA7G,CAAtB,CAFqB,CAAD,EAG/BI,qBAH+B,CAAlC;AAIAF,OAAO,CAACE,qBAAR,GAAgCA,qBAAhC","sourcesContent":["\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuthenticationService = void 0;\nconst common_1 = require(\"@nestjs/common\");\nconst user_1 = require(\"@/modules/user\");\nlet AuthenticationService = class AuthenticationService {\n    userService;\n    jwtService;\n    constructor(userService, jwtService) {\n        this.userService = userService;\n        this.jwtService = jwtService;\n    }\n    async validatePayload(payload) {\n        const user = await this.userService.findByID(payload.id);\n        if (!user)\n            throw new common_1.NotFoundException(\"user-not-found\");\n        if (user.email !== payload.email)\n            throw new common_1.UnprocessableEntityException(\"email-mismatch\");\n        return user;\n    }\n    async register(data) {\n        const user = await this.userService.create(data);\n        const token = await this.jwtService.signAsync({ id: user.id, email: user.emai });\n        return user;\n    }\n};\nAuthenticationService = __decorate([\n    (0, common_1.Injectable)(),\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof user_1.UserService !== \"undefined\" && user_1.UserService) === \"function\" ? _a : Object, Object])\n], AuthenticationService);\nexports.AuthenticationService = AuthenticationService;\n"]},"metadata":{},"sourceType":"script"}