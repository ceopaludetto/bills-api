{"ast":null,"code":"\"use strict\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _a, _b;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Paginate = exports.PageInfo = exports.Pagination = void 0;\n\nconst graphql_1 = require(\"@nestjs/graphql\");\n\nrequire(\"class-validator\");\n\nconst Relay = __importStar(require(\"graphql-relay\"));\n\nfunction Pagination(modelFunc) {\n  const Model = modelFunc();\n  return (target, key, descriptor) => {\n    var _a;\n\n    let Edge = class Edge {\n      constructor() {\n        _defineProperty(this, \"node\", void 0);\n\n        _defineProperty(this, \"cursor\", void 0);\n      }\n\n    };\n\n    __decorate([(0, graphql_1.Field)(() => Model), __metadata(\"design:type\", Object)], Edge.prototype, \"node\", void 0);\n\n    __decorate([(0, graphql_1.Field)(() => String), __metadata(\"design:type\", typeof (_a = typeof Relay !== \"undefined\" && Relay.ConnectionCursor) === \"function\" ? _a : Object)], Edge.prototype, \"cursor\", void 0);\n\n    Edge = __decorate([(0, graphql_1.ObjectType)(`${Model.name}Edge`)], Edge);\n    return (0, graphql_1.Query)(() => PaginationType)(target, key, descriptor);\n  };\n}\n\nexports.Pagination = Pagination;\nlet PageInfo = class PageInfo {\n  constructor() {\n    _defineProperty(this, \"hasNextPage\", void 0);\n\n    _defineProperty(this, \"hasPreviousPage\", void 0);\n\n    _defineProperty(this, \"startCursor\", void 0);\n\n    _defineProperty(this, \"endCursor\", void 0);\n  }\n\n};\n\n__decorate([(0, graphql_1.Field)(() => Boolean), __metadata(\"design:type\", Boolean)], PageInfo.prototype, \"hasNextPage\", void 0);\n\n__decorate([(0, graphql_1.Field)(() => Boolean), __metadata(\"design:type\", Boolean)], PageInfo.prototype, \"hasPreviousPage\", void 0);\n\n__decorate([(0, graphql_1.Field)(() => String), __metadata(\"design:type\", typeof (_a = typeof Relay !== \"undefined\" && Relay.ConnectionCursor) === \"function\" ? _a : Object)], PageInfo.prototype, \"startCursor\", void 0);\n\n__decorate([(0, graphql_1.Field)(() => String), __metadata(\"design:type\", typeof (_b = typeof Relay !== \"undefined\" && Relay.ConnectionCursor) === \"function\" ? _b : Object)], PageInfo.prototype, \"endCursor\", void 0);\n\nPageInfo = __decorate([(0, graphql_1.ObjectType)()], PageInfo);\nexports.PageInfo = PageInfo;\n\nfunction Paginate(items, count, {\n  limit,\n  offset\n}) {\n  return {\n    total: count,\n    page: Math.floor(offset / limit),\n    pages: Math.ceil(count / limit),\n    items\n  };\n}\n\nexports.Paginate = Paginate;","map":{"version":3,"sources":["/Users/carlos/Documents/Projetos/Javascript/bills_api/src/utils/plugins/pagination.ts"],"names":["_a","_b","Object","defineProperty","exports","value","Paginate","PageInfo","Pagination","graphql_1","require","Relay","__importStar","modelFunc","Model","target","key","descriptor","Edge","__decorate","Field","__metadata","prototype","String","ConnectionCursor","ObjectType","name","Query","PaginationType","Boolean","items","count","limit","offset","total","page","Math","floor","pages","ceil"],"mappings":"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","sourcesContent":["\"use strict\";\nvar _a, _b;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Paginate = exports.PageInfo = exports.Pagination = void 0;\nconst graphql_1 = require(\"@nestjs/graphql\");\nrequire(\"class-validator\");\nconst Relay = __importStar(require(\"graphql-relay\"));\nfunction Pagination(modelFunc) {\n    const Model = modelFunc();\n    return (target, key, descriptor) => {\n        var _a;\n        let Edge = class Edge {\n            node;\n            cursor;\n        };\n        __decorate([\n            (0, graphql_1.Field)(() => Model),\n            __metadata(\"design:type\", Object)\n        ], Edge.prototype, \"node\", void 0);\n        __decorate([\n            (0, graphql_1.Field)(() => String),\n            __metadata(\"design:type\", typeof (_a = typeof Relay !== \"undefined\" && Relay.ConnectionCursor) === \"function\" ? _a : Object)\n        ], Edge.prototype, \"cursor\", void 0);\n        Edge = __decorate([\n            (0, graphql_1.ObjectType)(`${Model.name}Edge`)\n        ], Edge);\n        return (0, graphql_1.Query)(() => PaginationType)(target, key, descriptor);\n    };\n}\nexports.Pagination = Pagination;\nlet PageInfo = class PageInfo {\n    hasNextPage;\n    hasPreviousPage;\n    startCursor;\n    endCursor;\n};\n__decorate([\n    (0, graphql_1.Field)(() => Boolean),\n    __metadata(\"design:type\", Boolean)\n], PageInfo.prototype, \"hasNextPage\", void 0);\n__decorate([\n    (0, graphql_1.Field)(() => Boolean),\n    __metadata(\"design:type\", Boolean)\n], PageInfo.prototype, \"hasPreviousPage\", void 0);\n__decorate([\n    (0, graphql_1.Field)(() => String),\n    __metadata(\"design:type\", typeof (_a = typeof Relay !== \"undefined\" && Relay.ConnectionCursor) === \"function\" ? _a : Object)\n], PageInfo.prototype, \"startCursor\", void 0);\n__decorate([\n    (0, graphql_1.Field)(() => String),\n    __metadata(\"design:type\", typeof (_b = typeof Relay !== \"undefined\" && Relay.ConnectionCursor) === \"function\" ? _b : Object)\n], PageInfo.prototype, \"endCursor\", void 0);\nPageInfo = __decorate([\n    (0, graphql_1.ObjectType)()\n], PageInfo);\nexports.PageInfo = PageInfo;\nfunction Paginate(items, count, { limit, offset }) {\n    return { total: count, page: Math.floor(offset / limit), pages: Math.ceil(count / limit), items };\n}\nexports.Paginate = Paginate;\n"]},"metadata":{},"sourceType":"script"}